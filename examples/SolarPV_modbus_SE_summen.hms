! SolarPV_modbus_SE_summen.hms - Tages/Monats/Jahreswerte erzeugen & loggen - Aufruf gegen Mitternacht
!
! (c) jensDev - license LGPL3

! IP/hostname & Port separated by blank
string ipPortSolarEdge = "target 502";

dom.GetObject("CUxD.CUX2801001:6.CMD_SETS").State("tclsh /usr/local/addons/semon_ccu/bin/modbus_SE_reader.tcl " # ipPortSolarEdge # " Inverter Meter HMSCRIPT");
dom.GetObject("CUxD.CUX2801001:6.CMD_QUERY_RET").State(1);
var daten = dom.GetObject("CUxD.CUX2801001:6.CMD_RETS").State();

string tuple;
foreach(tuple, daten.Split("|")) 
{
   string item = tuple.StrValueByIndex("=", 0);
   string value = tuple.StrValueByIndex("=", 1);
   if (item == "meterData_TotWhExp__kWh") {
      real totalExport = value.ToFloat();
   }
   if (item == "meterData_TotWhImp__kWh") {
      real totalImport = value.ToFloat();
   }
   if (item == "inverterData_WH__kWh") {
      real totalProduction = value.ToFloat();
   }   
}

string exportPreAll = (dom.GetObject(ID_SYSTEM_VARIABLES)).Get("SolarPV.SV_Einspeisung_Tag").Value();
string importPreAll = (dom.GetObject(ID_SYSTEM_VARIABLES)).Get("SolarPV.SV_Verbrauch_Tag").Value();
string productionPreAll = (dom.GetObject(ID_SYSTEM_VARIABLES)).Get("SolarPV.SV_WR_Produktion_Tag").Value();
real exportPre = exportPreAll.Split("(").Split(")").StrValueByIndex("\t",1).ToFloat();
real importPre = importPreAll.Split("(").Split(")").StrValueByIndex("\t",1).ToFloat();
real productionPre = productionPreAll.Split("(").Split(")").StrValueByIndex("\t",1).ToFloat();
!WriteLine("Einspeisung gesamt gestern: " # exportPre # " kWh");
!WriteLine("Verbrauch gesamt gestern: " # importPre # " kWh");
!WriteLine("PV-Erzeugung gesamt gestern: " # productionPre # " kWh");

real einspeisung = totalExport - exportPre;
real verbrauch = totalImport - importPre;
real pvLeistung = totalProduction - productionPre;
!WriteLine("Einspeisung heute: " # einspeisung # " kWh");
!WriteLine("Verbrauch heute: " # verbrauch # " kWh");
!WriteLine("PV-Erzeugung heute: " # pvLeistung # " kWh");
(dom.GetObject(ID_SYSTEM_VARIABLES)).Get("SolarPV.SV_Einspeisung_Tag").State(einspeisung # " (" # totalExport # ")"); 
(dom.GetObject(ID_SYSTEM_VARIABLES)).Get("SolarPV.SV_Verbrauch_Tag").State(verbrauch # " (" # totalImport # ")"); 
(dom.GetObject(ID_SYSTEM_VARIABLES)).Get("SolarPV.SV_WR_Produktion_Tag").State(pvLeistung # " (" # totalProduction # ")"); 
! Loggen f√ºr CUxD-Highcharts
(dom.GetObject("CUxD.CUX2801001:1.LOGIT")).State("SolarPV_Einspeisung_Tag;"#einspeisung);
(dom.GetObject("CUxD.CUX2801001:1.LOGIT")).State("SolarPV_Verbrauch_Tag;"#verbrauch);
(dom.GetObject("CUxD.CUX2801001:1.LOGIT")).State("SolarPV_WR_Produktion_Tag;"#pvLeistung);
(dom.GetObject("CUxD.CUX2801001:1.LOGIT")).State("SolarPV_Einspeisung_Total;"#totalExport);
(dom.GetObject("CUxD.CUX2801001:1.LOGIT")).State("SolarPV_Verbrauch_Total;"#totalImport);
(dom.GetObject("CUxD.CUX2801001:1.LOGIT")).State("SolarPV_WR_Produktion_Total;"#totalProduction);
